<#
.SYNOPSIS
    Compiles multiple system information reports into single master log files.

.DESCRIPTION
    This script is designed to be run in a directory containing individual system report files
    (e.g., HOSTNAME_TIMESTAMP.csv and HOSTNAME_TIMESTAMP.txt) generated by a data collection script.

    It performs two main actions:
    1.  Combines all .csv files into a single, timestamped master CSV file, perfect for analysis
        in Excel or other data tools. Each machine's report becomes a single row.
    2.  Concatenates all .txt files into a single, timestamped master TXT file, creating a
        comprehensive, readable log for manual review and searching.

.NOTES
    Author: Gemini
    Version: 1.0
    Instructions: Place this script in the same folder as your report files and execute it.
#>

# --- Initial Setup ---
Clear-Host
$sourcePath = $PSScriptRoot
$timestamp = Get-Date -Format "yyyyMMdd-HHmmss"

Write-Host "Starting the report compilation process." -ForegroundColor Cyan
Write-Host "Source directory: $sourcePath"

# --- 1. Compile CSV Files ---
Write-Host "`n--- Compiling CSV Reports ---" -ForegroundColor Yellow

# Find all CSV files that match the expected report format (hostname_timestamp.csv)
# The pattern ensures we don't accidentally try to compile a master log into itself.
$csvFiles = Get-ChildItem -Path $sourcePath -Filter "*_*.csv"

if ($null -ne $csvFiles) {
    $fileCount = $csvFiles.Count
    Write-Host "Found $fileCount CSV report(s) to compile." -ForegroundColor Green

    # Define the master CSV filename
    $masterCsvFileName = "Master_Log_$($timestamp).csv"
    $masterCsvPath = Join-Path -Path $sourcePath -ChildPath $masterCsvFileName

    try {
        # Import all found CSVs at once and export them into a single new file
        $combinedCsvData = $csvFiles | ForEach-Object { Import-Csv -Path $_.FullName }
        $combinedCsvData | Export-Csv -Path $masterCsvPath -NoTypeInformation -Encoding UTF8

        Write-Host "Successfully created master CSV log: $masterCsvFileName" -ForegroundColor Green
    } catch {
        Write-Error "An error occurred during CSV compilation: $_"
    }
} else {
    Write-Warning "No CSV report files found in this directory."
}


# --- 2. Compile TXT Files ---
Write-Host "`n--- Compiling TXT Reports ---" -ForegroundColor Yellow

# Find all TXT files that match the report format
$txtFiles = Get-ChildItem -Path $sourcePath -Filter "*_*.txt"

if ($null -ne $txtFiles) {
    $fileCount = $txtFiles.Count
    Write-Host "Found $fileCount TXT report(s) to compile." -ForegroundColor Green

    # Define the master TXT filename
    $masterTxtFileName = "Master_Log_$($timestamp).txt"
    $masterTxtPath = Join-Path -Path $sourcePath -ChildPath $masterTxtFileName

    try {
        # Loop through each file and append its content with a clear separator
        foreach ($file in $txtFiles) {
            $hostnameFromFile = $file.BaseName.Split('_')[0]
            $separator = @"

================================================================================
===== START OF REPORT FOR: $($hostnameFromFile)
===== SOURCE FILE: $($file.Name)
================================================================================

"@
            # Add the separator and the file content to the master log
            Add-Content -Path $masterTxtPath -Value $separator -Encoding UTF8
            Get-Content -Path $file.FullName | Add-Content -Path $masterTxtPath -Encoding UTF8
        }
        Write-Host "Successfully created master TXT log: $masterTxtFileName" -ForegroundColor Green
    } catch {
        Write-Error "An error occurred during TXT compilation: $_"
    }
} else {
    Write-Warning "No TXT report files found in this directory."
}

Write-Host "`nCompilation script finished." -ForegroundColor Cyan
